server:
  port: 8001


#应用名称
spring:
  application:
    name: dcloud-account

  #服务注册发现
  cloud:
    nacos:
      discovery:
        server-addr: 139.159.250.149:8848
        username: nacos
        password: nacos
  #Redis
  redis:
    client-type: jedis
    host: 139.159.250.149
    password: xdclass.net
    port: 6379
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 100
        # 连接池最⼤阻塞等待时间（使⽤负值表示没有限制）
        max-wait: 60000
  #数据库配置
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://139.159.250.149:3306/dcloud_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
#    username: root
#    password: xdclass.net168
  # 数据源 ds0 第一个数据库
  shardingsphere:
    datasource:
      #数据源名称
      names: ds0
      ds0:
        connectionTimeoutMilliseconds: 30000
        driver-class-name: com.mysql.cj.jdbc.Driver
        idleTimeoutMilliseconds: 60000
        jdbc-url: jdbc:mysql://139.159.250.149:3306/dcloud_account?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        maintenanceIntervalMilliseconds: 30000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 50
        minPoolSize: 50
        password: xdclass.net168
        type: com.zaxxer.hikari.HikariDataSource
        username: root

    props:
      # 打印执行的数据库以及语句
      sql:
        show: true

    sharding:
      tables:
        traffic:
          # 指定traffic表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
          actual-data-nodes: ds0.traffic_$->{0..1}
          #水平分表策略+行表达式分片
          table-strategy:
            inline:
              algorithm-expression: traffic_$->{ account_no % 2 }
              sharding-column: account_no
          #id生成策略
          key-generator:
            column: id
            props:
              worker:
                id: 0
            #id生成策略
            type: SNOWFLAKE



#配置plus打印sql日志
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#sms短信配置
sms:
  app-code: 19f147c34a974acb845f4ae2f4be90cd
  template-id: 908e94ccf08b4476ba6c876d13f084ad
  sms-sign-id: 2e65b1bb3d054466b82f0c9d125465e2

#阿里云oss配置
aliyun:
  oss:
    endpoint: oss-cn-chengdu.aliyuncs.com
    access-key-id: LTAI5t6aRGxHN9qyAHHLXqWv
    access-key-secret: ahMekDoZp1pveQ0LqHChzjD59QsMEl
    bucket-name: sas-short-link